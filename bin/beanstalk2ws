#!/usr/bin/env ruby

require_relative "../lib/tiny_call_center"
require TCC::ROOT/:options
require TCC::LIBROOT/"tiny_call_center/ribbon_web_socket"
require TCC::LIBROOT/"tiny_call_center/fs_listener"
require TCC::LIBROOT/"tiny_call_center/live_web_socket"
require TCC::LIBROOT/"tiny_call_center/jack_tube"

TCC::Log.level = Log4r.const_get(TCC.options.log_level)
p = Log4r::PatternFormatter.new :pattern => '%l <%x> %m'
TCC::Log.outputters.each { |outputter| outputter.formatter = p }

with_log = lambda do |name, &block|
  begin
    Log4r::NDC.push name
    block.call
  ensure
    Log4r::NDC.pop
  end
end

websocket = lambda do |uri, handler|
  host, port = uri.host, uri.port

  with_log.('websocket') do
    TCC::Log.info "Starting Websocket on #{host}:#{port}"

    EM::WebSocket.start(host: host, port: port, debug: false) do |ws|
      handler.new(ws)
    end
  end
end

EM.run do
  websocket.(TCC.options.live2.server, TCC::LiveManager)
  websocket.(TCC.options.ribbon2.server, TCC::RibbonAgent)

  with_log.('jack_tube'){
    tubes = TCC.options.beanstalk.listen_tubes
    TCC::Log.info "Starting JackTube for #{tubes}"
    TCC::JackTube.new.watch_socket(tubes)
  }
end
